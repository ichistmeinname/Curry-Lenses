This directory contains all files that are necessary to compile
a web application generated by Spicey (with the Curry implementation PAKCS).

The directory structure is as follows if <MODEL> is the name of your
entity-relationship model.

models/
  This directory contains the implementation of the data model, i.e.,
  it contains the Curry module <MODEL>.curry implementing the access
  to the database which are generated from the ER description.  If you
  want to add more complex integrity constraints on update operations,
  you should extend the Curry code in this module.
  In addition to the Curry programs, this directory also contains
  the term files of the original and transformed ER description
  (files <MODEL>_ERD.curry and <MODEL>_ERDT.curry).

controllers/
  This directory contains the implementation of the various
  controllers that are responsible to react on user interactions.  It
  also contains a module AuthorizedControllers.curry that contains the
  authorization rules that should usually be adapted according to the
  customer requirements.

views/
  This directory contains the implementation of the views of the
  different entities. These views are called from the corresponding
  controllers.  Moreover, it also contains the module
  <MODEL>EntitiesToHtml.curry which contains the code to translate all
  entities into an HTML representation. Usually, this code should be
  adapted according to the customer requirements.

config/
  This directory contains modules to configure the overall access to
  the functionality provided by the system.  For instance, the
  information about the routes, i.e., the URLs supported by the system
  and their mapping to individual controllers, is defined in the
  module RoutesData.curry.  The module ControllerMapping.curry defines
  the actual mapping of controller references to the operations
  implementing the controllers.  The module UserProcesses.curry
  contains the definition of the processes that can be selected by the
  user.

system/
  This directory contains global modules implementing session
  management, authentication, authorization, user processes, etc.

scripts/
  This directory contains scripts to compile, load, and install
  (deploy) the generated system.

public/
  This directory contains images and style files used by the installed
  system.
